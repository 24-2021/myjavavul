//package org.apache.shiro.web.util;
//
//import org.owasp.encoder.Encode;
//import org.slf4j.Logger;
//import org.slf4j.LoggerFactory;
//
//import javax.servlet.http.HttpServletRequest;
//import java.io.UnsupportedEncodingException;
//import java.net.URLDecoder;
//
//public class WebUtils {
//    public static final String INCLUDE_CONTEXT_PATH_ATTRIBUTE = "javax.servlet.include.context_path";
//    public static final String INCLUDE_REQUEST_URI_ATTRIBUTE = "javax.servlet.include.request_uri";
//    public static final String DEFAULT_CHARACTER_ENCODING = "ISO-8859-1";
//
//    private static final Logger log = LoggerFactory.getLogger(WebUtils.class);
//
//
//    private static String decodeAndCleanUriString(HttpServletRequest request, String uri) {
//        uri = decodeRequestString(request, uri);
//        int semicolonIndex = uri.indexOf(';');
//        return (semicolonIndex != -1 ? uri.substring(0, semicolonIndex) : uri);
//    }
//
//    @SuppressWarnings({"deprecation"})
//    public static String decodeRequestString(HttpServletRequest request, String source) {
//        String enc = determineEncoding(request);
//        try {
//            return URLDecoder.decode(source, enc);
//        } catch (UnsupportedEncodingException ex) {
//            if (log.isWarnEnabled()) {
//                log.warn("Could not decode request string [" + Encode.forHtml(source) + "] with encoding '" + Encode.forHtml(enc) +
//                        "': falling back to platform default encoding; exception message: " + ex.getMessage());
//            }
//            return URLDecoder.decode(source);
//        }
//    }
//
//    protected static String determineEncoding(HttpServletRequest request) {
//        String enc = request.getCharacterEncoding();
//        if (enc == null) {
//            enc = DEFAULT_CHARACTER_ENCODING;
//        }
//        return enc;
//    }
//
//    private static String normalize(String path, boolean replaceBackSlash) {
//
//        if (path == null)
//            return null;
//
//        // Create a place for the normalized path
//        String normalized = path;
//
//        if (replaceBackSlash && normalized.indexOf('\\') >= 0)
//            normalized = normalized.replace('\\', '/');
//
//        if (normalized.equals("/."))
//            return "/";
//
//        // Add a leading "/" if necessary
//        if (!normalized.startsWith("/"))
//            normalized = "/" + normalized;
//
//        // Resolve occurrences of "//" in the normalized path
//        while (true) {
//            int index = normalized.indexOf("//");
//            if (index < 0)
//                break;
//            normalized = normalized.substring(0, index) +
//                    normalized.substring(index + 1);
//        }
//
//        // Resolve occurrences of "/./" in the normalized path
//        while (true) {
//            int index = normalized.indexOf("/./");
//            if (index < 0)
//                break;
//            normalized = normalized.substring(0, index) +
//                    normalized.substring(index + 2);
//        }
//
//        // Resolve occurrences of "/../" in the normalized path
//        while (true) {
//            int index = normalized.indexOf("/../");
//            if (index < 0)
//                break;
//            if (index == 0)
//                return (null);  // Trying to go outside our context
//            int index2 = normalized.lastIndexOf('/', index - 1);
//            normalized = normalized.substring(0, index2) +
//                    normalized.substring(index + 3);
//        }
//
//        // Return the normalized path that we have completed
//        return (normalized);
//
//    }
//
//    public static String normalize(String path) {
//        return normalize(path, true);
//    }
//
//
//    public static String getRequestUri(HttpServletRequest request) {
//        String uri = (String) request.getAttribute(INCLUDE_REQUEST_URI_ATTRIBUTE);
//        if (uri == null) {
//            uri = valueOrEmpty(request.getContextPath()) + "/" +
//                    valueOrEmpty(request.getServletPath()) +
//                    valueOrEmpty(request.getPathInfo());
//        }
//        return normalize(decodeAndCleanUriString(request, uri));
//    }
//
//    private static String valueOrEmpty(String input) {
//        if (input == null) {
//            return "";
//        }
//        return input;
//    }
//}
